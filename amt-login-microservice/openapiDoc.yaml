openapi: 3.1.0
info:
  title: mygarden
  version: '1.0'
servers:
  - url: 'http://localhost'
paths:
  /auth/login:
    post:
      summary: ''
      operationId: post-auth-login
      responses:
        '200':
          $ref: '#/components/responses/loginToken'
        '401':
          description: Unauthorized
        '422':
          $ref: '#/components/responses/error'
      parameters:
        - schema:
            type: string
          in: header
          name: Accept
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
        description: ''
  /auth/user-profile:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/account'
        '401':
          description: Unauthorized
      operationId: get-auth-user-profile
      security:
        - API Key - 1: []
  /auth/register:
    post:
      summary: ''
      operationId: post-auth-register
      responses:
        '201':
          $ref: '#/components/responses/account'
        '400':
          $ref: '#/components/responses/error'
  /auth/logout:
    post:
      summary: ''
      operationId: post-auth-logout
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      security:
        - API Key - 1: []
  /auth/refresh:
    post:
      summary: ''
      operationId: post-auth-refresh
      responses:
        '200':
          $ref: '#/components/responses/loginToken'
        '401':
          description: Unauthorized
components:
  schemas:
    Account:
      title: Account
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        role:
          type: string
          enum:
            - user
            - admin
      required:
        - id
        - username
        - role
  securitySchemes:
    API Key - 1:
      type: oauth2
      flows:
        password:
          tokenUrl: 'http://localhost/auth/login'
          scopes: {}
          refreshUrl: 'http://localhost/auth/refresh'
  responses:
    badRequest:
      description: Error
      content:
        application/json:
          schema:
            type: object
            description: a list where the key is the field name
            properties:
              field_name:
                type: array
                minItems: 1
                description: each array string corresponds to a error related to the field
                items:
                  type: string
    loginToken:
      description: Successfull login
      content:
        application/json:
          schema:
            type: object
            properties:
              token:
                type: string
              token_type:
                type: string
              expires_in:
                type: string
              account:
                $ref: '#/components/schemas/Account'
    error:
      description: Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    account:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Account'
